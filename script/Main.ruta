IMPORT PACKAGE de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos FROM GeneratedDKProCoreTypes AS pos;
IMPORT de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Lemma FROM GeneratedDKProCoreTypes;
IMPORT PACKAGE de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos FROM Stanfordtagger AS spos;
IMPORT PACKAGE de.tudarmstadt.ukp.dkpro.core.api.ner.type FROM GeneratedDKProCoreTypes AS ner;
//IMPORT PACKAGE de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency FROM GeneratedDKProCoreTypes AS dep;
//IMPORT PACKAGE de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent FROM GeneratedDKProCoreTypes AS con;

UIMAFIT de.tudarmstadt.ukp.dkpro.core.stanfordnlp.StanfordSegmenter;
UIMAFIT de.tudarmstadt.ukp.dkpro.core.stanfordnlp.StanfordPosTagger;
//UIMAFIT de.tudarmstadt.ukp.dkpro.core.stanfordnlp.StanfordParser;

Document{-> SETFEATURE("language","de")};  //Set language

Document{-> EXEC(StanfordSegmenter)};    //Execute stanford segmenter

Document{-> EXEC(StanfordPosTagger, {spos.POS})};
//Document{-> EXEC(StanfordParser, {con.Constituent})}; 
//Document{-> EXEC(StanfordParser, {dep.Dependency})};   //Execute Stanford PoS Tagger and NER Tagger
Document{-> RETAINTYPE(SPACE)};
Document{-> RETAINTYPE(BREAK)};
//Document{->DYNAMICANCHORING(true)};

//DBpedia Annotations
WORDTABLE DBP ='dboutput.txt';
DECLARE DBPedia (STRING Link, STRING SimilarityScore,STRING Offset, STRING Types);  
Document {-> MARKTABLE (DBPedia, 1, DBP, "Link" = 2, "SimilarityScore" = 3, "Offset" = 5, "Types" = 6)};
//Roman Numeral Tagger
DECLARE RN(STRING Value);
WORDTABLE RomanNumeral ='RomanNumeral.txt';
Document {-> MARKTABLE (RN, 1, RomanNumeral, "Value" = 2)};
//Rules


// Chapter and all other TOC rules are not updated yet, they are not used currently


//------------------------------------------------------------------------------//
//-------------------------------CHAPTER ---------------------------------------//
//------------------------------------------------------------------------------//
DECLARE toc;
DECLARE chapternumber, chaptertopic;
DECLARE Chapter(chapternumber chapternumber,  chaptertopic chaptertopic);

(PERIOD PERIOD PERIOD PERIOD+){->CREATE (toc)};
( ((((W{REGEXP("Kapitel")} | (W{REGEXP("Kap")} PERIOD)) WS?  RN){->chapternumber} 
    WS? ("-"| "–")? WS?) (W{-REGEXP("Inhalt")} &  W{-REGEXP("Inhaltsübersicht")})+ {-> chaptertopic} 
){->CREATE  (Chapter, "chapternumber" = chapternumber, "chaptertopic" = chaptertopic)} );  

//------------------------------------------------------------------------------//
//---------------- SUBCHAPTER and SUBSUBCHAPTER --------------------------------//
//------------------------------------------------------------------------------//



DECLARE subchapternumber, subchapter, subchapterpage;
DECLARE SubChapter(subchapternumber subchapternumber, subchapterpage subchapterpage, subchapter subchapter);
( (RN) { -> MARK(subchapternumber)} PERIOD 
    (ANY{-PARTOF(PERIOD)})[0,20]? { -> MARK(subchapter)} PERIOD[3,25]?  
    org.apache.uima.ruta.type.NUM { -> MARK(subchapterpage)}
) {->CREATE  (SubChapter, "subchapternumber" = subchapternumber, "subchapter" = subchapter, "subchapterpage" = subchapterpage)};

//-------------------------------------------------------------------------------------------------
DECLARE subsubchapternumber, subsubchapter , subsubchapterpage;
DECLARE SubSubChapter(subsubchapternumber subsubchapternumber, subsubchapter subsubchapter, subsubchapterpage subsubchapterpage);
 ( org.apache.uima.ruta.type.NUM { -> MARK(subsubchapternumber)} 
     PERIOD   (ANY{-PARTOF(PERIOD)})[2,20] { -> MARK(subsubchapter)} PERIOD[3,25]? 
     org.apache.uima.ruta.type.NUM { -> MARK(subsubchapterpage)}) 
     {->CREATE  (SubSubChapter, "subsubchapternumber" = subsubchapternumber, "subsubchapter" = subsubchapter, "subsubchapterpage" = subsubchapterpage)};
 
//------------------------------------------------------------------------------//
//---------------- PART NUMBER, PART TOPIC AND PART PAGE------------------------//
//------------------------------------------------------------------------------//
DECLARE partnumber, parttopic, partpage;
DECLARE Part(partnumber partnumber,  parttopic parttopic, partpage partpage);

(    ((W{REGEXP("^[ABC]")}) PERIOD) { -> MARK(partnumber)}  WS? 
    (org.apache.uima.ruta.type.ANY & ANY{-PARTOF(PERIOD)})[0,15]? {->MARK(parttopic)}
     PERIOD[3,20]? org.apache.uima.ruta.type.NUM { -> MARK(partpage)}
) {->CREATE  (Part, "partnumber" = partnumber, "parttopic" = parttopic, "partpage" = partpage)} ;



//------------------------------------------------------------------------------//
//----------------------- GESETZ -----------------------------------------------//
//------------------------------------------------------------------------------//

DECLARE gesetz, gesetzno, gesetznope, lref, rref;
DECLARE Gesetz(gesetz gesetz);
//The meaning of REF changed. It now is a combination of two laws, separated by i.V.m or a conjunction
DECLARE REF1(lref lref, rref rref);

        (((SPECIAL{REGEXP("§")})+ |  (W{REGEXP("Art")} PERIOD)) pos.CARD
            (org.apache.uima.ruta.type.ANY{REGEXP("[\\(\\)a-z0-9,\\-–§]+"), -PARTOF(pos.V)} )[0,40]//\\& W{-REGEXP("Rdnr|Rn")} &-CAP\\& -pos.V{FEATURE("PosValue","VAFIN")} \\& -pos.V{FEATURE("PosValue","VVFIN")} \\& -pos.PP{FEATURE("PosValue","APPR")} \\& -pos.ADJ{FEATURE("PosValue","ADJD")})[1,15])    
           // (org.apache.uima.ruta.type.ANY{REGEXP("([A-Za-z\\-,])")})* 
            ((pos.NN{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
                |
                ( pos.NP{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
            ) {->gesetz})
             {-> CREATE (Gesetz, "gesetz" = gesetz)};
//org.apache.uima.ruta.type.NUM  (org.apache.uima.ruta.type.ANY{REGEXP("[^B-MO-RT-Z]{0,15}")}
 (((SPECIAL{REGEXP("§")})+ |  (W{REGEXP("Art")} PERIOD)) (pos.CARD) ((COMMA|W{REGEXP("und")}|W{REGEXP("bis")}|W{REGEXP("sowie")}|SPECIAL{REGEXP("–")}) (SPECIAL{REGEXP("§")})* pos.CARD)*
              ((pos.NN{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
                  |
                  ( pos.NP{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
              ) {->gesetz})
               {-> CREATE (Gesetz, "gesetz" = gesetz)};  

     


(((SPECIAL{REGEXP("§")})+ |  (W{REGEXP("Art")} PERIOD)) org.apache.uima.ruta.type.NUM (((W{REGEXP("und")})|W{REGEXP("bis")}|SPECIAL{REGEXP("-")}|SPECIAL{REGEXP("–")}) (SPECIAL{REGEXP("§")})* org.apache.uima.ruta.type.NUM )? (pos.CARD (COMMA pos.CARD)*)?

(org.apache.uima.ruta.type.ANY{REGEXP("[^\\/;]"), -PARTOF(pos.V)})[0,40] //\\& W{-REGEXP("Rdnr|Rn")} &-CAP\\& -pos.V{FEATURE("PosValue","VAFIN")} \\& -pos.V{FEATURE("PosValue","VVFIN")} \\& -pos.PP{FEATURE("PosValue","APPR")} \\& -pos.ADJ{FEATURE("PosValue","ADJD")})[1,15])    
   // (org.apache.uima.ruta.type.ANY{REGEXP("([A-Za-z\\-,])")})* 
    ((pos.NN{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
    |
    ( pos.NP{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
    ) {->gesetz})
     {-> CREATE (Gesetz, "gesetz" = gesetz)};
     
        

   
   (((SPECIAL{REGEXP("§")})+ |  (W{REGEXP("Art")} PERIOD)) pos.CARD
       (org.apache.uima.ruta.type.ANY{REGEXP("[\\(\\)a-z0-9]+"), -PARTOF(pos.V)})[0,40]//\\& W{-REGEXP("Rdnr|Rn")} &-CAP\\& -pos.V{FEATURE("PosValue","VAFIN")} \\& -pos.V{FEATURE("PosValue","VVFIN")} \\& -pos.PP{FEATURE("PosValue","APPR")} \\& -pos.ADJ{FEATURE("PosValue","ADJD")})[1,15])    
      // (org.apache.uima.ruta.type.ANY{REGEXP("([A-Za-z\\-,])")})* 
       ((pos.NN{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
           |
           ( pos.NP{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
       ) {->gesetz})
        {-> CREATE (Gesetz, "gesetz" = gesetz)};
        
       
                        
        
          (((SPECIAL{REGEXP("§")})+ |  (W{REGEXP("Art")} PERIOD)) pos.CARD(((W{REGEXP("und")})|W{REGEXP("bis")}|SPECIAL{REGEXP("-")}|SPECIAL{REGEXP("–")}) (SPECIAL{REGEXP("§")})* org.apache.uima.ruta.type.NUM )? (pos.CARD (COMMA pos.CARD)*)?
           
               (org.apache.uima.ruta.type.ANY{REGEXP("[\\(\\)a-z0-9]+"), -PARTOF(pos.V)})[0,40]//\\& W{-REGEXP("Rdnr|Rn")} &-CAP\\& -pos.V{FEATURE("PosValue","VAFIN")} \\& -pos.V{FEATURE("PosValue","VVFIN")} \\& -pos.PP{FEATURE("PosValue","APPR")} \\& -pos.ADJ{FEATURE("PosValue","ADJD")})[1,15])    
              // (org.apache.uima.ruta.type.ANY{REGEXP("([A-Za-z\\-,])")})* 
               ((pos.NN{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
                   |
                   ( pos.NP{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
               ) {->gesetz})
                {-> CREATE (Gesetz, "gesetz" = gesetz)};
                
        
        
          (((SPECIAL{REGEXP("§")})+ |  (W{REGEXP("Art")} PERIOD)) pos.CARD
          
            W{REGEXP("[A-Z]([a-z]){0,6}")}PERIOD (pos.CARD)
              ((pos.NN{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
                  |
                  ( pos.NP{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
              ) {->gesetz})
               {-> CREATE (Gesetz, "gesetz" = gesetz)};
      (((pos.CARD{REGEXP("§")})+ |  (W{REGEXP("Art")} PERIOD)) pos.CARD+
          
              ((pos.NN{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
                  |
                  ( pos.NP{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
                   ){->gesetz})
                    {-> CREATE (Gesetz, "gesetz" = gesetz)};
      (((SPECIAL{REGEXP("§")})+ |  (W{REGEXP("Art")} PERIOD)) (pos.CARD) ((COMMA|W{REGEXP("und")}|W{REGEXP("bis")}|W{REGEXP("sowie")}|pos.NP|pos.NN|SPECIAL{REGEXP("-")}|SPECIAL{REGEXP("–")}) (SPECIAL{REGEXP("§")})*(org.apache.uima.ruta.type.NUM|pos.CARD))*
              ((pos.NN{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
                  |
                  ( pos.NP{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
              ) {->gesetz})
               {-> CREATE (Gesetz, "gesetz" = gesetz)};  
     
     (((SPECIAL{REGEXP("§")})+ |  (W{REGEXP("Art")} PERIOD)) (org.apache.uima.ruta.type.NUM) ((COMMA|W{REGEXP("und")}|W{REGEXP("bis")}|W{REGEXP("sowie")}|pos.NP|pos.NN|SPECIAL{REGEXP("-")}|SPECIAL{REGEXP("–")}) (SPECIAL{REGEXP("§")})*(org.apache.uima.ruta.type.NUM|pos.CARD))*
         ((pos.NN{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
             |
             ( pos.NP{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
         ) {->gesetz})
          {-> CREATE (Gesetz, "gesetz" = gesetz)};  
     
  (((SPECIAL{REGEXP("§")})+ |  (W{REGEXP("Art")} PERIOD)) (pos.CARD|org.apache.uima.ruta.type.NUM)+ ((COMMA|W{REGEXP("und")}|W{REGEXP("bis")}|W{REGEXP("sowie")})(SPECIAL{REGEXP("§")})*(pos.CARD|org.apache.uima.ruta.type.NUM)+)*
      ((pos.NN{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
          |
          ( pos.NP{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
      ) {->gesetz})
       {-> CREATE (Gesetz, "gesetz" = gesetz)};
       
(((SPECIAL{REGEXP("§")})+ |  (W{REGEXP("Art")} PERIOD)) org.apache.uima.ruta.type.NUM (pos.CARD)? ((W{REGEXP("Nr\\b")}|W{REGEXP("Abs\\b")}|W{REGEXP("S\\b")}|W{REGEXP("UAbs\\b")}) PERIOD pos.CARD)*
      ((pos.NN{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
          |
          ( pos.NP{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
      ) {->gesetz})
       {-> CREATE (Gesetz, "gesetz" = gesetz)};            
  (((SPECIAL{REGEXP("§")})+ |  (W{REGEXP("Art")} PERIOD)) org.apache.uima.ruta.type.NUM
      ((pos.NN{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
          |
          ( pos.NP{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
      ) {->gesetz})
       {-> CREATE (Gesetz, "gesetz" = gesetz)};
         (((SPECIAL{REGEXP("§")})+ |  (W{REGEXP("Art")} PERIOD)) (pos.CARD)
             ((pos.NN{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
                 |
                 ( pos.NP{REGEXP("([A-Za-z\\-]){1,15}([A-HJ-UVWY-ZÄÖÜ])\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)})
             ) {->gesetz})
              {-> CREATE (Gesetz, "gesetz" = gesetz)};
            (((SPECIAL{REGEXP("§")})+ |  (W{REGEXP("Art")} PERIOD)) org.apache.uima.ruta.type.ANY{REGEXP("[0-9]+[a-z]?")}
                (W{REGEXP("([A-HJ-UVWY-ZÄÖÜ]){1,7}\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)}
                     ) {->gesetz})
                      {-> CREATE (Gesetz, "gesetz" = gesetz)};
                             (((SPECIAL{REGEXP("§")})+ |  (W{REGEXP("Art")} PERIOD)) pos.O{REGEXP("[0-9]+[a-z]?")}
                                      (pos.O{REGEXP("([A-HJ-UVWY-ZÄÖÜ]){1,7}\\b"),-REGEXP("OLG\\b"),-REGEXP("BGH\\b"),-REGEXP("BGHZ\\b"),-REGEXP("EUGH\\b"),-REGEXP("LG\\b"),-REGEXP("WG\\b"),-REGEXP("EG\\b"),-REGEXP("BFHE\\b"),-PARTOF(gesetz)}
                                           ) {->gesetz})
                                            {-> CREATE (Gesetz, "gesetz" = gesetz)};
// Here, wrong annotations of Gesetz are unmarked, can be extended
Gesetz.gesetz{PARTOF(RN)->UNMARK (Gesetz)};
Gesetz{REGEXP("(.)*UN\\b")->UNMARK (Gesetz)};
  Gesetz{REGEXP("(.)*UA\\b")->UNMARK (Gesetz)};
    Gesetz{REGEXP("(.)*VO\\b")->UNMARK (Gesetz)};
        Gesetz{REGEXP("(.)*RL\\b")->UNMARK (Gesetz)};
         Gesetz{REGEXP("(.)*RiL\\b")->UNMARK (Gesetz)};
        Gesetz{REGEXP("(.)*IV\\b")->UNMARK (Gesetz)};
        Gesetz->{ANY t:@Gesetz{-> UNMARK(t)};t:@Gesetz{-> UNMARK(t)} ANY;};
        Gesetz{NEAR(toc,0,15,false)->UNMARK(Gesetz)};
//------------------------------------------------------------------------------//
//---------------- Richtlinie (Directive) and Verordnung (Regulation)-----------//
//------------------------------------------------------------------------------//

DECLARE rili;
DECLARE Richtlinie(rili rili);
DECLARE vo;
DECLARE Verordnung(vo vo);
DECLARE ger;
DECLARE Gericht(ger ger);
(
(
((pos.NP{REGEXP("([a-zA-ZÖÄÜ\\-])*RL")} PERIOD?) |(pos.NN{REGEXP("([a-zA-ZÖÄÜ\\-])*RL")} PERIOD?) |(W{REGEXP("([a-zA-ZÖÄÜ\\-])*Rl")} PERIOD?) | (pos.NN{REGEXP("([a-zA-ZÖÄÜ\\-])*RI")} PERIOD?) | (pos.NP{REGEXP("([a-zA-ZÖÄÜ\\-])*RI")} PERIOD?) | (pos.NP{REGEXP("([a-zA-ZÖÄÜ\\-])*Ri")} PERIOD?)|(pos.NN{REGEXP("([a-zA-ZÖÄÜ\\-])*Ri")} PERIOD?)| (pos.NP{REGEXP("([a-zA-ZÖÄÜ\\-])*RiL")} PERIOD?)|(pos.NN{REGEXP("([a-zA-ZÖÄÜ\\-])*RiL")} PERIOD?) 
| pos.NP{REGEXP("([a-zA-ZÖÄÜ\\-])*RiLi")}| pos.NN{REGEXP("([a-zA-ZÖÄÜ\\-])*RiLi")}|  pos.NN{REGEXP("(.)*Richtlinie")}|pos.NP{REGEXP("(.)*Richtlinie")}| W{REGEXP("(.)+richtlinie\b")})) 
( (org.apache.uima.ruta.type.NUM{REGEXP("([0-9]){1,5}")} SPECIAL{REGEXP("/")} 
org.apache.uima.ruta.type.NUM{REGEXP("([0-9]){1,5}")} SPECIAL{REGEXP("/")} CAP)?
((((W{REGEXP("für")}W{-PARTOF(pos.ART)}))//(pos.NN|pos.NP))
|(W{REGEXP("über")})) W*)*) 
{ -> MARK(rili)}){-> CREATE (Richtlinie, "rili" = rili)}; 
((pos.NP{REGEXP("([a-zA-ZÖÄÜ\\-])*VO\\b")}|pos.NN{REGEXP("([a-zA-ZÖÄÜ\\-])*VO\\b")}| W{REGEXP("(.)*Verordnung\\b")}| W{REGEXP("(.)+verordnung\\b")})( 
(org.apache.uima.ruta.type.NUM{REGEXP("([0-9]){1,5}")} SPECIAL{REGEXP("/")} org.apache.uima.ruta.type.NUM{REGEXP("([0-9]){1,4}")} (SPECIAL{REGEXP("/")} CAP)?)?
//(W{REGEXP("über")} ((org.apache.uima.ruta.type.ANY{REGEXP("[^\\.]")}&pos.NN) |W |(org.apache.uima.ruta.type.ANY{REGEXP("[^\\.]")}&pos.NP)|(org.apache.uima.ruta.type.ANY{REGEXP("[^\\.]")}&pos.ADJ)|(org.apache.uima.ruta.type.ANY{REGEXP("[^\\.]")}&pos.PP)|(org.apache.uima.ruta.type.ANY{REGEXP("[^\\.]")}&pos.O)|(org.apache.uima.ruta.type.ANY{REGEXP("[^\\.]")}&pos.ADV)|(org.apache.uima.ruta.type.ANY{REGEXP("[^\\.]")}&pos.ART))[1,9])*)
((W{REGEXP("über")}|(W{REGEXP("für")})) (W{-REGEXP("vom"), -REGEXP("nach")})+
(W{REGEXP("vom")} org.apache.uima.ruta.type.NUM PERIOD org.apache.uima.ruta.type.NUM  PERIOD org.apache.uima.ruta.type.NUM )?
//(pos.NN|pos.NP))*)
)*)
{ -> MARK(vo)}){-> CREATE (Verordnung, "vo" = vo)}; 
((
(((SPECIAL{REGEXP("§")})+ |  (W{REGEXP("Art")} PERIOD))(org.apache.uima.ruta.type.NUM|pos.CARD)(pos.CARD (COMMA pos.CARD)?)?)? ( pos.NP{REGEXP("([a-zA-ZÖÄÜ\\-])*VO\b")}| pos.NN{REGEXP("([a-zA-ZÖÄÜ\\-])*VO\b")}| org.apache.uima.ruta.type.ANY{REGEXP("(.)*Verordnung\b")}| org.apache.uima.ruta.type.ANY{REGEXP("(.)+verordnung$")})

(W{REGEXP("vom")} org.apache.uima.ruta.type.NUM PERIOD org.apache.uima.ruta.type.NUM  PERIOD org.apache.uima.ruta.type.NUM )?
//(W{REGEXP("über")} ((org.apache.uima.ruta.type.ANY{REGEXP("[^\\.]")}&pos.NN) |W|(org.apache.uima.ruta.type.ANY{REGEXP("[^\\.]")}&pos.NP)|(org.apache.uima.ruta.type.ANY{REGEXP("[^\\.]")}&pos.ADJ)|(org.apache.uima.ruta.type.ANY{REGEXP("[^\\.]")}&pos.PP)|(org.apache.uima.ruta.type.ANY{REGEXP("[^\\.]")}&pos.O)|(org.apache.uima.ruta.type.ANY{REGEXP("[^\\.]")}&pos.ADV)|(org.apache.uima.ruta.type.ANY{REGEXP("[^\\.]")}&pos.ART))[1,10])*
((W{REGEXP("über")}|(W{REGEXP("für")}))(W{-REGEXP("vom"),-REGEXP("nach")})+)*
(W{REGEXP("vom")} org.apache.uima.ruta.type.NUM PERIOD org.apache.uima.ruta.type.NUM  PERIOD org.apache.uima.ruta.type.NUM )?
//( pos.NN | pos.NN))*
(COMMA )?(pos.NP|pos.NN) (PERIOD? (pos.CARD PERIOD?)[0,5])?
 ){ -> MARK(vo)}
 ){-> CREATE (Verordnung, "vo" = vo)}; 
((pos.NN{REGEXP("\\b([a-zA-ZÖÄÜ\\-])*GH\\b")}|pos.NP{REGEXP("\\b([a-zA-ZÖÄÜ\\-])*GH\\b")}){->MARK(ger)}  (org.apache.uima.ruta.type.ANY{REGEXP("[A-ZÄÖÜ]+")})+ org.apache.uima.ruta.type.NUM (COMMA org.apache.uima.ruta.type.NUM (SPECIAL{REGEXP("\\(")} org.apache.uima.ruta.type.NUM SPECIAL{REGEXP("\\)")})?)?){->CREATE( Gericht, "ger"=ger)}; 
((pos.NN{REGEXP("\\b([a-zA-ZÖÄÜ\\-])*GH\\b")}|pos.NP{REGEXP("\\b([a-zA-ZÖÄÜ\\-])*GH\\b")}){->MARK(ger)} COMMA (org.apache.uima.ruta.type.ANY{REGEXP("[0-9\\/\\-A-Z]+")})+){->CREATE( Gericht, "ger"=ger)};
(((pos.NN{REGEXP("OLG\\b")}|pos.NP{REGEXP("OLG\\b")}) W){->MARK(ger)}  (org.apache.uima.ruta.type.ANY{REGEXP("[A-ZÄÖÜ]+")})+ org.apache.uima.ruta.type.NUM (COMMA org.apache.uima.ruta.type.NUM (SPECIAL{REGEXP("\\(")} org.apache.uima.ruta.type.NUM SPECIAL{REGEXP("\\)")})?)?){->CREATE( Gericht, "ger"=ger)};

 Richtlinie{COUNT(W,6,10)->UNMARK(Richtlinie)};
  Richtlinie{PARTOF(pos.V)->UNMARK(Richtlinie)};
   Verordnung{PARTOF(pos.V)->UNMARK(Verordnung)};
 //------------------------------------------------------------------------------//
 //-------------------------- REF -----------------------------------------------//
 //------------------------------------------------------------------------------//

((Gesetz | Verordnung | Richtlinie ){-> MARK(lref)} (pos.ADJ{REGEXP("i.V.m.")}|W{REGEXP("vom")})(Gesetz | Verordnung | Richtlinie){-> MARK(rref)}){-> CREATE (REF1, "lref" = lref, "rref" = rref)};
Gericht{NEAR(toc,0,15,false)->UNMARK(Gericht)};
Verordnung{NEAR(toc,0,15,false)->UNMARK(Verordnung)};
Richtlinie{NEAR(toc,0,15,false)->UNMARK(Richtlinie)};

// RFC is not used currently. The patterns need to be updated and improved.

//------------------------------------------------------------------------------//
//----------------------------------- RFC --------------------------------------//
//------------------------------------------------------------------------------//
DECLARE rfc, rfc1, rfc2, ref1, RFC_NE1, RFC_NE2, RFC_NE3, RFC_NE4, explicitReference2;
// RFC_NE1 - Rule name : posPatterNeDef2
// RFC_NE2 - RFC_NE rule : patternAufz 
// RFC_NE3 - RFC_NE rule : patternNE
// RFC_NE4 - RFC_NE rule : patternwithbrackets
(pos.ART CAP COMMA W* Gesetz) {-> RFC_NE1};
((pos.NN pos.V pos.ART (pos.NN pos.PP)* (pos.NN Gesetz) {-> MARK(explicitReference2)} W) {-> RFC_NE2});
((pos.PP pos.ART pos.NN (pos.NN Gesetz) {-> MARK(explicitReference2)}) {-> RFC_NE2});
(pos.ART pos.ADJ pos.NN pos.ART pos.NN* W* Gesetz {-> MARK(explicitReference2)}) {->RFC_NE3};

// Pattern with Brackets
DECLARE RFCNE41, RFCNE42, RFCNE43, RFCNE44, RFCNE45, RFCNE46, RFCNE47, RFCNE48, RFCNE49;
((pos.ART pos.N)[2,3] W* SPECIAL{REGEXP("[(]")} (pos.ADJ{REGEXP("vgl")}) (org.apache.uima.ruta.type.PERIOD) Gesetz SPECIAL{REGEXP("[)]")})  {-> MARK(RFC_NE4)};
((pos.ART pos.N)[2,3] W* SPECIAL{REGEXP("[(]")} (SPECIAL{REGEXP("§")}) Gesetz SPECIAL{REGEXP("[)]")})  {-> MARK(RFC_NE4)};
((pos.ART pos.N)[3,4] W* SPECIAL{REGEXP("[(]")} Gesetz (org.apache.uima.ruta.type.ANY)[0,20]? SPECIAL{REGEXP("[)]")})  {-> MARK(RFC_NE4)};
(pos.N W pos.N SPECIAL{REGEXP("[(]")} (pos.ADJ{REGEXP("vgl")}) (org.apache.uima.ruta.type.PERIOD) Gesetz SPECIAL{REGEXP("[)]")})  {-> MARK(RFC_NE4)};
(pos.ART pos.N ANY{-PARTOF(pos.ART)} W* SPECIAL{REGEXP("[(]")} Gesetz SPECIAL{REGEXP("[)]")})  {-> MARK(RFCNE46)};
((pos.ART pos.N)[2,3] W* SPECIAL{REGEXP("[(]")} Gesetz SPECIAL{REGEXP("[)]")})  {-> MARK(RFCNE43)};
RFCNE46{PARTOF(RFCNE43)->UNMARK(RFCNE46)};
(RFCNE43 | RFCNE46) {-> MARK(RFC_NE4)};
RFCNE43 { -> UNMARK(RFCNE43)};
RFCNE46 { -> UNMARK(RFCNE46)};
(pos.ART pos.N pos.O W* SPECIAL{REGEXP("[(]")} Gesetz (org.apache.uima.ruta.type.ANY)[0,20]? SPECIAL{REGEXP("[)]")})  {-> MARK(RFC_NE4)};
(pos.ART pos.N pos.V pos.V W* SPECIAL{REGEXP("[(]")} (SPECIAL{REGEXP("§")}) Gesetz SPECIAL{REGEXP("[)]")})  {-> MARK(RFCNE42)};
(pos.PP pos.N pos.ADV pos.PP W* SPECIAL{REGEXP("[(]")} (pos.ADJ{REGEXP("vgl")}) (org.apache.uima.ruta.type.PERIOD) Gesetz SPECIAL{REGEXP("[)]")})  {-> MARK(RFCNE44)};
(pos.ART pos.N pos.PP W* SPECIAL{REGEXP("[(]")} ((SPECIAL{REGEXP("§")}) | (pos.ADJ{REGEXP("vgl")} org.apache.uima.ruta.type.PERIOD)) Gesetz SPECIAL{REGEXP("[)]")})  {-> MARK(RFCNE41)};
RFCNE41{PARTOF(RFC_NE4)->UNMARK(RFCNE41)};
(pos.N (pos.ADJ | pos.V) (pos.N | org.apache.uima.ruta.type.COMMA) W* SPECIAL{REGEXP("[(]")} (SPECIAL{REGEXP("§")}) Gesetz SPECIAL{REGEXP("[)]")}) {-> MARK(RFCNE43)};
(pos.ADJ pos.N pos.CONJ W* SPECIAL{REGEXP("[(]")}  Gesetz SPECIAL{REGEXP("[)]")}) {-> MARK(RFCNE45)};
(pos.ART pos.ADJ pos.NN W[2,] SPECIAL{REGEXP("[(]")}  SPECIAL{REGEXP("§")} Gesetz (org.apache.uima.ruta.type.ANY)[0,20]?  SPECIAL{REGEXP("[)]")}) {-> MARK(RFCNE46)};
(pos.ART pos.N pos.V SPECIAL{REGEXP("[(]")} (pos.ADJ{REGEXP("vgl")}) (org.apache.uima.ruta.type.PERIOD) ANY{-PARTOF(Gesetz)} (org.apache.uima.ruta.type.ANY)[5,50]? Gesetz (org.apache.uima.ruta.type.ANY)[5,20]? SPECIAL{REGEXP("[)]")})  {-> MARK(RFCNE47)};
(pos.ART pos.N SPECIAL{REGEXP("[(]")} Gesetz (org.apache.uima.ruta.type.ANY)[0,20]? SPECIAL{REGEXP("[)]")})  {-> MARK(RFCNE49)};
(pos.ADJ pos.N pos.PP pos.ADJ pos.NN W* SPECIAL{REGEXP("[(]")} (org.apache.uima.ruta.type.ANY)[5,50]? Gesetz (org.apache.uima.ruta.type.ANY)[2,10]? SPECIAL{REGEXP("[)]")}) {-> MARK(RFCNE48)};
RFCNE49{PARTOF(RFC_NE4)->UNMARK(RFCNE49)};
(RFCNE43 | RFCNE46 | RFCNE41 | RFCNE42 | RFCNE44 | RFCNE45 | RFCNE47 | RFCNE48 | RFCNE49) {-> MARK(RFC_NE4)};

RFCNE41 { -> UNMARK(RFCNE41)};
RFCNE42 { -> UNMARK(RFCNE42)};
RFCNE43 { -> UNMARK(RFCNE43)};
RFCNE44 { -> UNMARK(RFCNE44)};
RFCNE45 { -> UNMARK(RFCNE45)};
RFCNE46 { -> UNMARK(RFCNE46)};
RFCNE47 { -> UNMARK(RFCNE47)};
RFCNE48 { -> UNMARK(RFCNE48)};
RFCNE49 { -> UNMARK(RFCNE49)};